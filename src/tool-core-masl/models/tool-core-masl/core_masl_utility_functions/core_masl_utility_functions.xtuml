-- BP 7.1.6 content: Package syschar: 3 persistence-version: 7.1.6

INSERT INTO EP_PKG
	VALUES ("3e3aaf4c-aba5-451d-b263-e8fc1b717bce",
	"ff182108-eff3-4cdc-81dd-efdc6098874b",
	"ff182108-eff3-4cdc-81dd-efdc6098874b",
	'core_masl_utility_functions',
	'',
	0);
INSERT INTO GD_MD
	VALUES ("d5b4a2a1-9952-487e-9398-c5ede50dfd1d",
	112,
	"3e3aaf4c-aba5-451d-b263-e8fc1b717bce",
	108,
	0,
	0,
	1,
	1,
	1,
	12,
	1,
	0,
	0,
	0,
	0,
	0,
	'',
	'tool-core-masl::core_masl_utility_functions');
INSERT INTO DIM_DIA
	VALUES ("d5b4a2a1-9952-487e-9398-c5ede50dfd1d",
	'',
	1.000000,
	0.000000,
	0.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO S_SYNC
	VALUES ("a908ce8d-07c5-44cf-925b-6e71bd3b9fed",
	"00000000-0000-0000-0000-000000000000",
	'attrIsUnique',
	'',
	'attr = param.attr;
if attr.isUnique
  return true;
else
  select many unique_ref_attrs related by attr->AttributeDeclaration[R5800.''refers_to''];
  for each unique_ref_attr in unique_ref_attrs
    if ::attrIsUnique(attr:unique_ref_attr)
      return true;
    end if;
  end for;
  return false;
end if;',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'',
	0,
	11);
INSERT INTO S_SPARM
	VALUES ("06418faf-5553-4c7d-99de-3b5a40c93f2d",
	"a908ce8d-07c5-44cf-925b-6e71bd3b9fed",
	'attr',
	"bc9fb0af-6887-4a01-9bad-2412058db57c",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("bc9fb0af-6887-4a01-9bad-2412058db57c",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<AttributeDeclaration>',
	'',
	'',
	'../../../../ooamasl/models/ooamasl/ooamasl/object/object.xtuml');
INSERT INTO PE_PE
	VALUES ("a908ce8d-07c5-44cf-925b-6e71bd3b9fed",
	1,
	"3e3aaf4c-aba5-451d-b263-e8fc1b717bce",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("b05a942b-b18c-4f6e-89ad-f5b247981068",
	"00000000-0000-0000-0000-000000000000",
	'transformBuiltinMaslTypeCharacteristics',
	'',
	'// TODO need to complete this for other types

// timer characteristics
::createCharacteristic(type:"Timer", name:"getPeriod", return_type:"Duration");
::createCharacteristic(type:"Timer", name:"getScheduledExpirationTime", return_type:"TimeStamp");
::createCharacteristic(type:"Timer", name:"getLastExpirationTime", return_type:"TimeStamp");
::createCharacteristic(type:"Timer", name:"isScheduled", return_type:"boolean");
::createCharacteristic(type:"Timer", name:"isExpired", return_type:"boolean");',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0,
	0);
INSERT INTO PE_PE
	VALUES ("b05a942b-b18c-4f6e-89ad-f5b247981068",
	1,
	"3e3aaf4c-aba5-451d-b263-e8fc1b717bce",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("1a0b792f-f254-4ac0-96c3-42a338848779",
	"00000000-0000-0000-0000-000000000000",
	'createCharacteristic',
	'',
	'select any type from instances of Type where selected.name == param.type;
return_type = ::getBasicTypeReferenceByName(name:param.return_type);
create object instance invocable of InvocableObject;
invocable.parent_name = type.name;
invocable.parent_package = type.package;
invocable.name = param.name;
relate return_type to invocable across R428;
create object instance characteristic of Characteristic;
relate characteristic to invocable across R427;
relate characteristic to type across R3820;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0,
	12);
INSERT INTO S_SPARM
	VALUES ("d0fa080b-4e70-4ea5-874f-79a7304f62dd",
	"1a0b792f-f254-4ac0-96c3-42a338848779",
	'type',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_SPARM
	VALUES ("12fab36b-4797-4dae-a48a-4b9d38a322dd",
	"1a0b792f-f254-4ac0-96c3-42a338848779",
	'name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"d0fa080b-4e70-4ea5-874f-79a7304f62dd",
	'');
INSERT INTO S_SPARM
	VALUES ("91eab2cb-5660-4818-9c9f-f0529d9b139c",
	"1a0b792f-f254-4ac0-96c3-42a338848779",
	'return_type',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"12fab36b-4797-4dae-a48a-4b9d38a322dd",
	'');
INSERT INTO PE_PE
	VALUES ("1a0b792f-f254-4ac0-96c3-42a338848779",
	1,
	"3e3aaf4c-aba5-451d-b263-e8fc1b717bce",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("0cd552df-9657-4c1d-b29f-a782f6733a65",
	"00000000-0000-0000-0000-000000000000",
	'getTypeReferenceForMASLType',
	'',
	'basic_type = param.basic_type;

select any empty_type_ref from instances of TypeReference where false;

// TODO currently just support builtin types, instance types, and sets

if empty basic_type
  return ::getBasicTypeReferenceByName(name:"void");
end if;

select one builtin related by basic_type->BuiltinType[R6205];
if not_empty builtin
  // map from MASL builtins to Ciera builtins
  if ("" + builtin.name == "boolean")
    return ::getBasicTypeReferenceByName(name:"boolean");
  elif ("" + builtin.name == "event")
    // return ''Object'' for deprecated inst<Event> type
    return ::getBasicTypeReferenceByName(name:"Object");
  elif ("" + builtin.name == "timer")
    return ::getBasicTypeReferenceByName(name:"Timer");
  elif ("" + builtin.name == "integer")
    return ::getBasicTypeReferenceByName(name:"int");
  elif ("" + builtin.name == "real")
    return ::getBasicTypeReferenceByName(name:"double");
  elif ("" + builtin.name == "string")
    return ::getBasicTypeReferenceByName(name:"String");
  elif ("" + builtin.name == "timestamp")
    return ::getBasicTypeReferenceByName(name:"TimeStamp");
  elif ("" + builtin.name == "duration")
    return ::getBasicTypeReferenceByName(name:"Duration");
  elif ("" + builtin.name == "instance")
    return ::getBasicTypeReferenceByName(name:"ObjectInstance");
  elif ("" + builtin.name == "device")
    return ::getBasicTypeReferenceByName(name:"Device");
  elif ("" + builtin.name == "byte")
    return ::getBasicTypeReferenceByName(name:"byte");
  elif ("" + builtin.name == "character")
    return ::getBasicTypeReferenceByName(name:"char");
  elif ("" + builtin.name == "wcharacter")
    return ::getBasicTypeReferenceByName(name:"char");
  elif ("" + builtin.name == "wstring")
    return ::getBasicTypeReferenceByName(name:"String");
  elif ("" + builtin.name == "long_integer")
    return ::getBasicTypeReferenceByName(name:"long");
  end if;
end if;

select one instance_type related by basic_type->InstanceType[R6205];
if not_empty instance_type
  select one obj related by instance_type->ObjectDeclaration[R6220]->Class[R8300];
  return ::getObjectReference(obj:obj);
end if;

select one collection_type related by basic_type->CollectionType[R6205];
if not_empty collection_type
  select one element_type related by collection_type->BasicType[R6208];
  select one set_type related by collection_type->SetType[R6207];
  if not_empty set_type
    element_type_ref = ::getTypeReferenceForMASLType(basic_type:element_type);
    return ::getSetReference(element_type:element_type_ref);
  end if;
  // TODO handle other collections
end if;

return empty_type_ref;',
	"096d9dad-f227-4793-bb43-a1915881b825",
	1,
	'',
	0,
	13);
INSERT INTO S_SPARM
	VALUES ("368d8d1c-2a20-4aa7-b34c-6947a593cc85",
	"0cd552df-9657-4c1d-b29f-a782f6733a65",
	'basic_type',
	"f2470f88-fc4a-406d-ba1c-54179e448ed4",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("f2470f88-fc4a-406d-ba1c-54179e448ed4",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<BasicType>',
	'',
	'',
	'../../../../ooamasl/models/ooamasl/ooamasl/type/type.xtuml');
INSERT INTO PE_PE
	VALUES ("0cd552df-9657-4c1d-b29f-a782f6733a65",
	1,
	"3e3aaf4c-aba5-451d-b263-e8fc1b717bce",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_DT_PROXY
	VALUES ("096d9dad-f227-4793-bb43-a1915881b825",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Type Reference>',
	'',
	'',
	'../../../../core-architecture/models/core-architecture/architecture/type/type.xtuml');
INSERT INTO PE_PE
	VALUES ("3e3aaf4c-aba5-451d-b263-e8fc1b717bce",
	1,
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	7);
INSERT INTO S_SYS_PROXY
	VALUES ("ff182108-eff3-4cdc-81dd-efdc6098874b",
	'tool-core-masl',
	1,
	'../tool-core-masl.xtuml');
